git:
    clone: false

language: python
python:
    - "3.10.9"

cache: pip

before_install:
  # Pull down our images from Dockerhub.
  - echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
  - docker pull busybox  # A very small image used for copying files to our volume.
  - docker pull flybase/proformatestdb
  - docker pull flybase/harvdev-docker

script:
    # We find our current branch harvdev-proforma-parser using the two lines below.
    - export BRANCH=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH; else echo $TRAVIS_PULL_REQUEST_BRANCH; fi)
    - echo "TRAVIS_BRANCH=$TRAVIS_BRANCH, PR=$PR, BRANCH=$BRANCH"
    
    # Clone in our proforma setup repository.
    - git clone git@github.com:FlyBase/harvdev-proforma-setup.git
    - cd harvdev-proforma-setup
    
    # Run the busybox countainer and mount the volume proforma_vol to the folder /data within busybox.
    - docker run -v proforma_vol:/data --name helper busybox true
    - docker cp test_scripts/test_files helper:/data  # Copy our test data into the volume.
    - docker rm helper  # Remove the busybox container, it's no longer needed.
    
    # Setup directories for testing.
    - ./build_test_travis_python.sh
    - cd build_dir/harvdev-proforma-parser
    
    # Build the flake8 version of our proforma parser. 
    # Run flake8 and terminate Travis if it fails.
    - docker build -t proforma_parser:flake8 --file Dockerfile.flake8 .
    - docker run proforma_parser:flake8 || travis_terminate 1;
    
    # Build the test version of the proforma parser.
    - docker build -t proforma_parser:latest .
    - cd ../../test_scripts
    
    # Build the gocd_testing_run container that controls the testing process.
    # This container spawns off copies of proforma_parser & proformatestdb.
    # Each pair of proforma_parser & proformatestdb runs a single test.
    - docker build -t gocd_testing_run:latest --file Dockerfile .
    
    # Run our tests via gocd_testing_run.
    - docker run -v /var/run/docker.sock:/var/run/docker.sock -v proforma_vol:/usr/src/app/data -e 'PROCESSES=8' -e 'DEBUG=False' --name gocd_testing_run --rm -t gocd_testing_run:latest

env:
  global:
  - secure: dnDtICjlplK4SI944nzkGpS/HFgz2bw/gQYEW8kbvlhW2QisUeR96O/p6vnNPAlgWoD2kn1I8IY5TlMLVuhs/Rkcdr72ATq+m7MSGYWwIJJFyR3bN6x85eW0FWodX6CmEaU0odX65gdmuQ+WkjuvX/rMSvdRMw1TYQGhLmYwZXZixeGt4Hf7gInsb8MxiErA4g6BrAluiiZg2t00D7JTwHgsZFaybKywN+fBO2hwujO1UtegNbCCY5ZVdPeNPbV+A0ij/LenQrmEVHab7PChxJRZ5j5td/RwvD2nwDHHZ5mKrMFZgO0TPoOmpqjIFaSleb/Dznx94KefgyXLYFZzi1oXBxtc7hlkL1dZ6HElq8O6EjBFT1n16p8i7yjNwZDjNwKJy1bzwoGcrYoxAeeBonQoII2YMYEyiRzmiZsxVIjPH/dj+hkIgBMBPY0LbP2VkC+lANcLG2TfIy+98GfUPt7Yl87zechPuTyLILO8K5IO8mtYwQCel52rMdgiUMbpial0N7znpWCmw68GQ+fPSsLGf+IkfuTWE6O+mZMQWQWRficqZeqiolZn7Plrm3FlEy2HwwjwYHZIIAYbGlAuxhjcdzqYE4Hju/BlqhYTZ1HFfyT8tdJzSXKCeSazWXGcoEwplpg7gdNmybH6g8Ag9MBYtnDTzS4GCddODOdJ3ZE=
  - secure: v/NoFN6ltsLXrhQJyKfZ4LmivMdYKkBVumWGnFdOa7+udv4nlHW1GdTyO15cWIiRrz+KpXtRWx/ISQyCNrryuVBsswUE4HM+cWpEaFWh6OSaxPcqbBDaehLLOykN7uvzdlpqlzvZ8mmwtq5gBmiEx5DBsZp6BWkP+eWG19vgbs8Q+m80GaFLYfuH97OYc6psXC2ZEZFA4jXDUPBJeJwnHqC0TWVfSvK27XOCaEGFRT4U0rZYjC/zeEm+bKPX0+tQCNnT/jME6LaneWN9nqKKbKP2T5J/Ndi3uCeRqSaiauYXmwowgdGaQiXp+MZ+X6H+j6dhvtzN03VEN3LhoolPIYCjVSXBY2jY1Dfcxrqr1xQyPMnT921M8eXX8d1KAPLdNDMHphnxYXkFpqok29gFuTOd02PnnCp5JwuqxZf4T8NFA2ZZyqHwHugyaqJNtjjx74BcXCDlAa/0VokPttKHkS7GQ6BCCS3vBVYFUCuVQGcrmgOCrgXQNZA45XnQfL4It0Z1bDwkEglQ2TymZK8FQPjjrxi9/zq5scXOQkvPrDs3JRO1cSjU77+XXESgYaOHxuAM0fK5EEIUbt82EWiNuqToKjVH82lLv/nOjPQ0WvWyR5Ym9iaC+y9fDCavJrdNiWD/6BzpYdQfhtqZ0718LOdZPM9mBtJZD2mNZ70TOMc=